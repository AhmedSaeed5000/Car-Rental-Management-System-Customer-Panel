name: Build & Deploy to Kubernetes
on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up Docker Buildx (Windows-compatible)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. (Optional) Enable QEMU for cross-platform builds
      - name: Set up QEMU emulation
        uses: docker/setup-qemu-action@v2

      # 4. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # 5. Build & Push Backend Image (multi-platform)
      - name: Build and push backend image
        shell: pwsh
        run: |
          docker buildx build `
            --platform linux/amd64,linux/arm64/v8 `
            -t ${{ secrets.DOCKER_USERNAME }}/car-rental-backend:latest `
            --push `
            ./express-app

      # 6. Build & Push Frontend Image (multi-platform)
      - name: Build and push frontend image
        shell: pwsh
        run: |
          docker buildx build `
            --platform linux/amd64,linux/arm64/v8 `
            -t ${{ secrets.DOCKER_USERNAME }}/car-rental-frontend:latest `
            --push `
            ./react-app

      # 7. Deploy Kubernetes manifests (unchanged)
      - name: Deploy to cluster
        shell: pwsh
        run: |
          kubectl apply -f mongo-deployment.yaml -n car-rental
          kubectl apply -f mongo-service.yaml    -n car-rental
          kubectl apply -f express-app/deployment.yaml -n car-rental
          kubectl apply -f express-app/service.yaml    -n car-rental
          kubectl apply -f react-app/deployment.yaml   -n car-rental
          kubectl apply -f react-app/service.yaml      -n car-rental
